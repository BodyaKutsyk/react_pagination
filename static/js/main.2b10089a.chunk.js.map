{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","itemsPerPage","itemsLink","Math","ceil","className","cn","disabled","href","onClick","map","link","active","length","App","useState","setPerPage","setCurrentPage","elemStart","elemEnd","id","onChange","event","target","value","defaultValue","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAeX,EACnBQ,EAAUC,EAAcD,EAAU,EAAGC,EAAcD,GAG/CI,EAAYZ,EAAW,EAAGa,KAAKC,KAAKP,EAAQC,IAElD,OACE,qCACE,qBAAIO,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBR,IAHhB,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACHV,EAAc,GAChBC,EAAaD,EAAc,IAPjC,oBAeAG,EAAUQ,KAAI,SAAAC,GAAI,OAChB,oBAAIN,UACFC,IACE,YACA,CACEM,OAAQD,IAASZ,IAJvB,SASE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,SAMT,oBACEN,UACEC,IACE,YACA,CACEC,SAAUL,EAAUA,EAAUW,OAAS,KAAOd,IALtD,SAUE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeN,EAAUA,EAAUW,OAAS,KAAOd,EACnDU,QAAS,WACHV,IAAgBG,EAAUA,EAAUW,OAAS,IAC/Cb,EAAaD,EAAc,IAPjC,uBAgBJ,6BAEIE,EAAaS,KAAI,SAAAhB,GACf,OAAIA,GAAKG,GAEL,oBAAI,UAAQ,OAAZ,wBAA4BH,cC/F/BoB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBkB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBkB,EAApB,KAEMC,EAAYpB,GAAWC,EAAc,GAAK,EAC5CoB,EAAUD,EAAYpB,EAAU,EAMpC,OAJIqB,EAJU,KAKZA,EALY,IASZ,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCmB,EADjC,cACgDC,EADhD,eAZU,GAYV,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,SAAU,SAAAC,GACRL,EAAe,GACfD,GAAYM,EAAMC,OAAOC,QAE3BC,aAAa,IARf,UAUE,wBAAQD,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAzCQ,GA0CRC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAAC2B,GAAD,OAAUV,EAAeU,UClD/CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2b10089a.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const itemsPerPage = getNumbers(\n    perPage * currentPage - perPage + 1, currentPage * perPage,\n  );\n\n  const itemsLink = getNumbers(1, Math.ceil(total / perPage));\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {\n          itemsLink.map(link => (\n            <li className={\n              cn(\n                'page-item',\n                {\n                  active: link === currentPage,\n                },\n              )\n            }\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${link}`}\n                onClick={() => onPageChange(link)}\n              >\n                {link}\n              </a>\n            </li>\n          ))\n        }\n\n        <li\n          className={\n            cn(\n              'page-item',\n              {\n                disabled: itemsLink[itemsLink.length - 1] === currentPage,\n              },\n            )\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={itemsLink[itemsLink.length - 1] === currentPage}\n            onClick={() => {\n              if (currentPage !== itemsLink[itemsLink.length - 1]) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {\n          itemsPerPage.map(n => {\n            if (n <= total) {\n              return (\n                <li data-cy=\"item\">{`Item ${n}`}</li>\n              );\n            }\n\n            return false;\n          })\n        }\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const total = 42;\n  const elemStart = perPage * (currentPage - 1) + 1;\n  let elemEnd = elemStart + perPage - 1;\n\n  if (elemEnd > total) {\n    elemEnd = total;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${elemStart} - ${elemEnd} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={event => {\n              setCurrentPage(1);\n              setPerPage(+event.target.value);\n            }}\n            defaultValue=\"5\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}